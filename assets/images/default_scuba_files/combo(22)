YUI.add("flickr-groups-addBlast-updater",function(e,t){"use strict";function n(n,r){var i={},s,o,u,a,f;return i.group_id=n.id,i.blast=n.blast,i.user_id=n.user,i.extras="gimme_blast",e.Promise.all([r.callAPI("flickr.groups.addBlast",i),r.getModelRegistry("group-blast-models"),r.getModel("person-models",n.user)]).then(function(t){return s=t[0],o=t[1],a=t[2],u=s.group.newBlastSecure.content,f=s.group.newBlast.content,o.setValue(n.id,"blastMessage",f),o.setValue(n.id,"blastMessageSecure",u),o.setValue(n.id,"blastDateAdded",e.moment(s.group.dateBlastAdded.toString(),"X")),o.setValue(n.id,"blastUserName",a.getValue("username")),o.setValue(n.id,"blastPathAlias",a.getValue("pathAlias")),o.setValue(n.id,"blastUserNSID",a.getValue("nsid")),o.setValue(n.id,"blastRealName",a.getValue("realname")),o.setValue(n.id,"blastUserStatus",n.status),u},e.FetcherErrorLogger(t))}e.namespace("ModelUpdaters")["flickr-groups-addBlast"]={run:n}},"@VERSION@",{requires:["flickr-promise","moment"],optional:[]});
YUI.add("group-blast-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{read:function(t){return e.ModelFetchers["flickr-groups-getInfo"].run(t,this.appContext)},update:function(t,n){return e.ModelUpdaters["flickr-groups-addBlast"].run(t,n)}},attributes:{blastMessage:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)},defaultValue:""},blastMessageSecure:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)},defaultValue:""},blastDateAdded:{validator:function(t){return e.AttributeHelpers.validateDate(t)},setter:function(t){return e.AttributeHelpers.coerceDate(t)},serialize:function(e){return e.format("X")},deserialize:function(t){return e.moment(t,"X")}},blastUserName:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)},defaultValue:""},blastPathAlias:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)},defaultValue:""},blastUserNSID:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)},defaultValue:""},blastRealName:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)},defaultValue:""},blastUserStatus:{},blastUserUrl:{readOnly:!0,derivedBy:["blastPathAlias","blastUserNSID"],defaultFn:function(e){var t=this.getValue(e,"blastPathAlias");return t||(t=this.getValue(e,"blastUserNSID")),"/photos/"+t}},blastDisplayName:{readOnly:!0,derivedBy:["blastUserName"],defaultFn:function(e){return this.getValue(e,"blastUserName")}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","flickr-groups-getInfo-fetcher","flickr-groups-addBlast-updater","attribute-helpers"]});
YUI.add("flickr-groups-updateViewDate-updater",function(e,t){"use strict";function n(n,r){return r.callAPI("flickr.groups.updateViewDate",n).then(null,e.FetcherErrorLogger(t))}e.namespace("ModelUpdaters")["flickr-groups-updateViewDate"]={run:n}},"@VERSION@",{requires:["flickr-promise"]});
YUI.add("group-activity-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{read:function(t){return e.ModelFetchers["flickr-groups-getInfo"].run(t,this.appContext)},updateViewDate:function(t,n){return e.ModelUpdaters["flickr-groups-updateViewDate"].run(t,n)}},groupViewed:function(t,n){t.type==="pool"?this.setValue(t.group_id,"viewedPool",e.moment()):t.type==="discussion"&&this.setValue(t.group_id,"viewedDiscussions",e.moment()),this.remote.updateViewDate(t,n)},getDefaultViewedDate:function(){return e.moment().subtract(13,"days")},attributes:{viewedDiscussions:{validator:function(t){return e.AttributeHelpers.validateDate(t)},setter:function(t){return e.AttributeHelpers.coerceDate(t)},defaultFn:function(e){return this.getDefaultViewedDate()},serialize:function(e){return e.format("X")},deserialize:function(t){return e.moment(t,"X")}},viewedPool:{validator:function(t){return e.AttributeHelpers.validateDate(t)},setter:function(t){return e.AttributeHelpers.coerceDate(t)},defaultFn:function(e){return this.getDefaultViewedDate()},serialize:function(e){return e.format("X")},deserialize:function(t){return e.moment(t,"X")}},latestViewedDate:{readOnly:!0,derivedBy:["viewedDiscussions","viewedPool"],getter:function(t,n){var r=this.getValue(n,"viewedPool"),i=this.getValue(n,"viewedDiscussions"),s=e.moment.max(i,r);return s}},hasNewActivity:{readOnly:!0,derivedBy:["latestViewedDate","group"],defaultFn:function(t){var n=this.getValue(t,"latestViewedDate"),r=this.getValue(t,"group").getValue("latestDiscussionActivity"),i=this.getValue(t,"group").getValue("latestPhotoActivity"),s=e.moment.max(i,r),o=n.clone().add(2,"w");return s.diff(n)>0&&s.diff(o)<0}},group:{isModel:!0}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","flickr-groups-updateViewDate-updater","flickr-people-getInfo-fetcher"]});
